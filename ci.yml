name: market place core CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name : auth-service
            DB_NAME: auth
            DB_USER: admin
            DB_PASSWORD: password
            DB_PORT: 5433

          - name : customer-service
            DB_NAME: customer
            DB_USER: admin
            DB_PASSWORD: password
            DB_PORT: 5434

          - name : product-service
            DB_NAME: product
            DB_USER: admin
            DB_PASSWORD: password
            DB_PORT: 5435

          - name : order-service
            DB_NAME: order
            DB_USER: admin
            DB_PASSWORD: password
            DB_PORT: 5436

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ matrix.service.DB_USER }}
          POSTGRES_PASSWORD: ${{ matrix.service.DB_PASSWORD }}
          POSTGRES_DB: ${{ matrix.service.DB_NAME }}
        ports:
          ${{ matrix.service.DB_PORT }}:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: checkout code
      uses: actions/checkout@v4


    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Dependencies
      working-directory: ./${{ matrix.service.name}}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      
    - name: run Tests
      working-directory: ./${{ matrix.service.name}}
      env:
        DB_NAME: ${{ matrix.service.DB_NAME }}
        DB_USER: ${{ matrix.service.DB_USER }}
        DB_PASSWORD: ${{ matrix.service.DB_PASSWORD }}
        DB_PORT: ${{ matrix.service.DB_PORT }}
        DB_HOST: localhost
      run: |
        python manage.py migrate
        python manage.py test

    - name: run Tests with coverage
      working-directory: ./${{ matrix.service.name}}
      env:
      DB_NAME: ${{ matrix.service.DB_NAME }}
      DB_USER: ${{ matrix.service.DB_USER }}
      DB_PASSWORD: ${{ matrix.service.DB_PASSWORD }}
      DB_PORT: ${{ matrix.service.DB_PORT }}
      DB_HOST: localhost
      run: |
        coverage run manage.py test
        coverage report
        coverage xml

    - name: Upload coverage test to codex
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: ${{ matrix.service.name }}
        working-directory: ./${{ matrix.service.name}}
        file: ./coverage.xml
        verbose: true
